//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("StokTakip.Data.EF.Model", "FK_ItemToActionLog", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StokTakip.Data.EF.Model.Item), "ActionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StokTakip.Data.EF.Model.ActionLog), true)]
[assembly: EdmRelationshipAttribute("StokTakip.Data.EF.Model", "FK_ItemItemProperty", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StokTakip.Data.EF.Model.Item), "ItemProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StokTakip.Data.EF.Model.ItemProperty), true)]

#endregion

namespace StokTakip.Data.EF.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StokContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StokContext object using the connection string found in the 'StokContext' section of the application configuration file.
        /// </summary>
        public StokContext() : base("name=StokContext", "StokContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StokContext object.
        /// </summary>
        public StokContext(string connectionString) : base(connectionString, "StokContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StokContext object.
        /// </summary>
        public StokContext(EntityConnection connection) : base(connection, "StokContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionLog> ActionLogs
        {
            get
            {
                if ((_ActionLogs == null))
                {
                    _ActionLogs = base.CreateObjectSet<ActionLog>("ActionLogs");
                }
                return _ActionLogs;
            }
        }
        private ObjectSet<ActionLog> _ActionLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemProperty> ItemProperties
        {
            get
            {
                if ((_ItemProperties == null))
                {
                    _ItemProperties = base.CreateObjectSet<ItemProperty>("ItemProperties");
                }
                return _ItemProperties;
            }
        }
        private ObjectSet<ItemProperty> _ItemProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionLogs(ActionLog actionLog)
        {
            base.AddObject("ActionLogs", actionLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemProperties(ItemProperty itemProperty)
        {
            base.AddObject("ItemProperties", itemProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StokTakip.Data.EF.Model", Name="ActionLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="oldQuantity">Initial value of the OldQuantity property.</param>
        /// <param name="newQuantity">Initial value of the NewQuantity property.</param>
        /// <param name="change">Initial value of the Change property.</param>
        /// <param name="actionDate">Initial value of the ActionDate property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="actionType">Initial value of the ActionType property.</param>
        public static ActionLog CreateActionLog(global::System.Int32 id, global::System.Int32 itemId, global::System.Int32 oldQuantity, global::System.Int32 newQuantity, global::System.Int32 change, global::System.DateTime actionDate, global::System.String description, ActionType actionType)
        {
            ActionLog actionLog = new ActionLog();
            actionLog.Id = id;
            actionLog.ItemId = itemId;
            actionLog.OldQuantity = oldQuantity;
            actionLog.NewQuantity = newQuantity;
            actionLog.Change = change;
            actionLog.ActionDate = actionDate;
            actionLog.Description = description;
            actionLog.ActionType = actionType;
            return actionLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldQuantity
        {
            get
            {
                return _OldQuantity;
            }
            set
            {
                OnOldQuantityChanging(value);
                ReportPropertyChanging("OldQuantity");
                _OldQuantity = StructuralObject.SetValidValue(value, "OldQuantity");
                ReportPropertyChanged("OldQuantity");
                OnOldQuantityChanged();
            }
        }
        private global::System.Int32 _OldQuantity;
        partial void OnOldQuantityChanging(global::System.Int32 value);
        partial void OnOldQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewQuantity
        {
            get
            {
                return _NewQuantity;
            }
            set
            {
                OnNewQuantityChanging(value);
                ReportPropertyChanging("NewQuantity");
                _NewQuantity = StructuralObject.SetValidValue(value, "NewQuantity");
                ReportPropertyChanged("NewQuantity");
                OnNewQuantityChanged();
            }
        }
        private global::System.Int32 _NewQuantity;
        partial void OnNewQuantityChanging(global::System.Int32 value);
        partial void OnNewQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Change
        {
            get
            {
                return _Change;
            }
            set
            {
                OnChangeChanging(value);
                ReportPropertyChanging("Change");
                _Change = StructuralObject.SetValidValue(value, "Change");
                ReportPropertyChanged("Change");
                OnChangeChanged();
            }
        }
        private global::System.Int32 _Change;
        partial void OnChangeChanging(global::System.Int32 value);
        partial void OnChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActionDate
        {
            get
            {
                return _ActionDate;
            }
            set
            {
                OnActionDateChanging(value);
                ReportPropertyChanging("ActionDate");
                _ActionDate = StructuralObject.SetValidValue(value, "ActionDate");
                ReportPropertyChanged("ActionDate");
                OnActionDateChanged();
            }
        }
        private global::System.DateTime _ActionDate;
        partial void OnActionDateChanging(global::System.DateTime value);
        partial void OnActionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public ActionType ActionType
        {
            get
            {
                return _ActionType;
            }
            set
            {
                OnActionTypeChanging(value);
                ReportPropertyChanging("ActionType");
                _ActionType = (ActionType)StructuralObject.SetValidValue((short)value, "ActionType");
                ReportPropertyChanged("ActionType");
                OnActionTypeChanged();
            }
        }
        private ActionType _ActionType;
        partial void OnActionTypeChanging(ActionType value);
        partial void OnActionTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StokTakip.Data.EF.Model", "FK_ItemToActionLog", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemToActionLog", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemToActionLog", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemToActionLog", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemToActionLog", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StokTakip.Data.EF.Model", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="insertDate">Initial value of the InsertDate property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String name, global::System.DateTime insertDate, global::System.Int32 quantity)
        {
            Item item = new Item();
            item.Id = id;
            item.Name = name;
            item.InsertDate = insertDate;
            item.Quantity = quantity;
            return item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StokTakip.Data.EF.Model", "FK_ItemToActionLog", "ActionLog")]
        public EntityCollection<ActionLog> ActionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionLog>("StokTakip.Data.EF.Model.FK_ItemToActionLog", "ActionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionLog>("StokTakip.Data.EF.Model.FK_ItemToActionLog", "ActionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StokTakip.Data.EF.Model", "FK_ItemItemProperty", "ItemProperty")]
        public EntityCollection<ItemProperty> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemProperty>("StokTakip.Data.EF.Model.FK_ItemItemProperty", "ItemProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemProperty>("StokTakip.Data.EF.Model.FK_ItemItemProperty", "ItemProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StokTakip.Data.EF.Model", Name="ItemProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemProperty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ItemProperty CreateItemProperty(global::System.Int32 id, global::System.Int32 itemId, global::System.String key, global::System.String value)
        {
            ItemProperty itemProperty = new ItemProperty();
            itemProperty.Id = id;
            itemProperty.ItemId = itemId;
            itemProperty.Key = key;
            itemProperty.Value = value;
            return itemProperty;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StokTakip.Data.EF.Model", "FK_ItemItemProperty", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemItemProperty", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemItemProperty", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemItemProperty", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("StokTakip.Data.EF.Model.FK_ItemItemProperty", "Item", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region Enums
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="StokTakip.Data.EF.Model", Name="ActionType")]
    [DataContractAttribute()]
    public enum ActionType : short
    {
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Increase = 1,
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Decrease = 2
    }

    #endregion

}
